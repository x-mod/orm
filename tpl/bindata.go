// Code generated by go-bindata.
// sources:
// tpl/code/golang/db.gogo
// tpl/code/golang/query.gogo
// tpl/code/golang/query.read.gogo
// tpl/code/golang/table.gogo
// tpl/code/golang/table.index.gogo
// tpl/code/golang/table.primary.gogo
// tpl/code/golang/table.read.gogo
// tpl/code/golang/table.unique.gogo
// tpl/code/golang/table.write.gogo
// tpl/scripts/mysql/table.sql.gogo
// DO NOT EDIT!

package tpl

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _codeGolangDbGogo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x58\x5b\x6f\xdb\x38\x16\x7e\x96\x7e\xc5\x19\x01\x2e\xc4\x40\x4b\x6f\x8c\x76\x1e\x3c\xe3\x2e\xda\xc6\xe9\x78\x90\x3a\x9d\x24\xd8\x79\x30\x82\x42\x16\x29\x47\xae\x45\x2a\x14\x9d\x0b\x0c\xfd\xf7\x05\x2f\xa2\x2e\x91\xbb\xdd\x9d\x4e\x1e\x62\xe9\xf0\xf0\x3b\x57\x7e\x24\x75\x38\x10\x9a\x66\x8c\x42\x40\xd6\x41\x55\x15\x71\xf2\x35\xde\x50\x38\x1c\xf0\x67\xf3\xb8\x8c\x73\x5a\x55\xbe\x9f\xe5\x05\x17\x12\x42\xdf\x0b\xd2\x5c\x06\xbe\x17\x94\x52\x64\x6c\x53\xaa\xc7\x84\x33\x49\x9f\xb4\x34\x11\xcf\x85\xe4\xe3\x9c\xbc\x51\x6f\x24\x96\xf1\x3a\x2e\xe9\xb8\xbc\xdf\x05\x9e\xef\x05\x94\x25\x9c\x64\x6c\x33\x56\xd2\x9f\x5f\x07\x6d\xd1\x1d\x7d\x0a\x7c\xdf\x0b\x36\x99\xbc\xdb\xaf\x71\xc2\xf3\xf1\xd3\x3f\x72\x4e\xc6\x9b\x1d\xdf\x04\x3e\xf2\x7d\xf9\x5c\x50\x38\x7b\x0f\x19\x93\x54\xa4\x71\x42\xe1\xe0\x7b\xf3\x27\x9a\x7c\x30\x0e\x84\x89\x7c\x02\xeb\x0c\xb6\xb2\x08\xee\xf7\x54\x3c\x83\x71\x37\x82\x58\x6c\x4a\xc0\x18\x3b\x8c\x43\x85\x20\x2c\xef\x77\xf8\x8a\x96\xfb\x9d\x8c\x80\x0a\xc1\x05\xf2\xbd\x3f\xd4\xbc\xbf\x8c\x7c\xa2\xa1\xf9\x63\xe9\x80\x2b\xdf\x1f\x8f\x2f\x2e\x3f\x9a\x70\x2e\x2e\x3f\x9e\xbd\x57\x18\xfb\x44\x1e\x7c\x8f\xac\xe1\xec\xbd\x52\x49\xf7\x2c\x51\x83\xa1\x96\x20\x38\x31\x8a\x07\xdf\x13\x54\xee\x05\x83\x57\x5a\x70\x20\xeb\x29\x90\x75\xe5\xa6\x84\xbb\x8d\xd5\x45\xf0\x37\xa5\x46\x3b\x61\xe2\x81\xe9\x0c\x76\x1b\x4c\xd6\xb8\x67\xcb\x62\x1b\x50\x8c\x31\xf2\xbd\x2c\xd5\x33\x7e\x9a\x01\xcb\x76\x0a\xc3\x53\x85\xc5\x73\x85\x99\x86\x01\x7d\xa2\xc9\x5e\x52\xf8\x75\x54\xbe\x85\x5f\x47\x0f\x6f\xa7\x30\x7a\x08\x3a\x38\xda\x24\xf2\xbd\x0a\xe8\xae\xa4\x0d\xc4\xbf\xc3\xd7\x08\x2f\x58\xca\x87\x60\xba\x10\x6a\xb6\x4b\xa1\x0d\x62\x30\x77\x7f\x53\xf5\x07\x73\xd7\xb7\xf5\xbf\x27\xcf\xf8\xf2\x17\x53\xd7\x03\xf9\xbe\xc4\x8d\xc7\x0b\x66\x3a\xf9\x3c\xa3\x3b\xb2\x58\xda\x5e\x56\x26\xb4\x04\xc0\xe6\xc8\xf7\x3e\xc7\x22\xce\x4b\x80\xd5\x6d\x2b\x4b\xbe\x77\xc7\x77\x84\x8a\x12\x56\xb7\x56\xb1\xae\xc7\x92\x3e\x5a\xd0\x30\xd5\x50\x66\x1c\xc1\x49\x6d\xab\xb5\x1c\xac\x48\x45\xa6\x1f\xa7\x00\xa0\x67\x45\xbe\x67\x2d\x4f\x7b\xa6\x0f\x95\x1a\xb3\xe6\xa7\xce\xbe\x16\xb7\x56\x54\xc6\x9c\x41\x04\xef\x08\x09\x1f\xa0\x53\xe5\xb6\x37\x19\xc3\x36\xca\x19\xc4\x45\x41\x19\x09\x9d\x28\x82\x07\xa4\x35\xea\x80\xdb\x2a\x56\x16\x41\xf0\xaf\x00\xb9\xa8\x32\x76\xc4\x8d\xeb\x3f\x2e\xce\xb9\xc8\x63\x19\x22\x9b\x15\x6d\x3d\x85\x1d\x65\x8d\x45\x04\xb3\x19\xfc\x53\x57\xdb\x02\x06\x41\xbb\x8e\x69\x2e\xf1\x75\x21\x32\x26\xd3\x30\x18\x95\xb0\x58\x42\x38\x2a\x51\x10\x41\xc6\xb0\xb6\x15\x59\xf4\x12\xff\xce\x33\xd6\x75\x34\x0a\x10\xfa\x6f\xee\x2d\xb9\x5c\xb0\x1f\xea\xe3\xf2\xf2\xe6\x87\xfa\x69\xbc\x08\x51\xb7\x35\x5a\x9d\xe5\x3c\x35\xed\x7e\x13\xaf\x77\x54\x19\x31\x5d\xef\x5e\x5b\x7d\x2f\x95\xac\x04\xf5\x97\xc7\xc5\xca\x78\x56\x37\xb7\xa7\x9b\xf2\xc5\xe8\xaa\x19\x17\x3c\x07\xf3\x57\x8b\xb6\x3c\x63\x66\x06\xac\x6e\x4f\xb4\x71\x2f\xe1\x8c\x64\x32\xe3\xac\xb5\x70\x3c\x2e\x08\x15\xef\x9f\xdb\x73\x77\x59\x9e\x49\x33\x37\x63\xd2\xf7\x78\x9a\x96\x54\x36\xef\x85\x5d\x94\xd0\x5f\x97\x95\xdd\x70\x95\xb9\xf3\x7a\xf9\x99\x5d\x4a\x07\xed\x2c\x9c\xb7\xd6\x66\x67\x56\x33\xe1\x13\x95\x77\x9c\x74\x67\x9c\xc2\x89\x83\xb6\xa2\x49\x5b\x54\x57\xec\x92\x85\x72\x7d\xea\x88\x36\x6d\x1e\xe5\x7a\xd2\x88\x27\x0d\x3b\x28\x8c\x16\x33\xd8\x57\xeb\xc4\x14\x82\xc5\x72\x39\xbf\x0a\xa2\x9a\x29\x4e\xa7\x46\x47\xbf\x1c\x74\x6c\x53\x90\xeb\xd3\x08\x2c\x91\xa4\xa7\x95\x53\x9e\x0c\x2b\x4f\x1a\xe5\x49\x97\x3e\x96\xf4\xd1\xf5\x48\x28\x5b\x89\x43\x70\xd2\x34\x8f\xea\x9a\xad\xda\x11\x5e\x39\x99\x72\xd9\x74\xd2\xd4\x36\xcb\x57\x1a\xbe\xe8\x27\xa4\x3c\x33\x2d\x35\xac\xb6\xea\x28\x0a\x9e\x4f\xc1\xe2\x2a\x81\xee\xac\x69\xa7\xb5\x0c\x2b\x36\xed\xd5\x23\x46\xdb\x30\xd3\x97\x1d\x63\x79\xb3\xce\xbb\xdc\x36\x8b\x4e\x6e\x5b\xc1\x22\x93\xaa\x4e\x32\x22\xb0\xcb\x02\x63\x5c\xa7\xc7\x90\x45\x4a\xca\x08\xf8\x57\x95\x1b\xb9\xc5\x46\x6b\xa5\xa7\xde\xfe\xa2\xe4\x2a\x4d\x29\x69\x91\xa9\x9e\x60\xf4\xcc\xde\xd9\xda\xf3\xfa\x08\x30\xb3\x9a\x1d\xc2\xef\x79\xab\x1f\xdf\xed\xb2\xb8\xec\xb9\x1c\x2b\x19\xb4\xdc\x95\x5b\x6c\x2a\xd6\xc0\x6b\x9d\xa3\xd0\x0b\xc6\xa8\x08\xb7\xa6\x65\x35\xc4\x16\xdb\xb5\x32\xab\xfb\x54\xc3\x1a\x06\x70\x31\xd6\x92\x08\xb6\x8a\xda\x06\xb1\x2f\x68\x2a\x8f\x42\x5f\xcc\xcf\x6f\xfe\x6f\xe4\xab\x6c\x73\x77\x1c\xfa\x6a\xf1\xf1\xb7\xef\xc2\x1e\x06\xff\x50\x37\x5e\xe8\x5a\xf0\xdb\x87\x2c\x93\xf7\x16\x1d\xb6\xed\x35\xe2\x08\xdc\x33\xd2\x33\x8a\xde\x3e\xed\x44\xad\x73\xd7\x31\x27\x2f\x0d\xcf\x86\x9a\x6f\xd7\xcf\xbd\x1e\xa8\x59\x78\x06\x76\xfc\x28\xce\x85\x22\xe7\xd0\x52\x72\xc6\x64\x04\x86\xae\x33\x26\xeb\xfe\x37\x82\x9f\xea\x3d\x52\x6e\xb1\x91\xcc\xcc\x88\x5e\x71\xca\xa6\xc1\x98\x81\x79\x38\x6a\xb1\xd7\xc4\xbd\x9d\x59\x77\x6b\x6b\xb9\x75\xba\xd9\x2d\xb7\x23\x3b\xf3\xbb\x6b\x18\x95\x41\x04\x86\x5c\x0c\x56\xe7\xd8\xa8\x07\x8e\x7a\x96\x0e\x90\x02\x74\xcf\x7d\x3f\xcc\x57\xac\x1d\xb5\x08\xda\x06\xfa\xc6\x99\x03\xb7\xc3\xb2\xda\xc7\xa2\xe0\xac\x59\x18\x96\x35\x8f\x1e\x65\x7e\xbf\x5c\x2c\x61\x54\xc2\xa5\xfe\x3f\xd3\xd9\x53\x9c\x6c\x17\x53\x64\xca\x1d\x97\xe1\xd6\x1c\x72\x26\x58\x1b\x42\x51\x8b\xc9\xea\xb1\x53\x33\x16\x81\x7b\xd7\x3f\x83\xba\x93\x9e\xee\xa4\xd1\x3d\x1e\xd8\xf0\x89\x33\xe1\xbb\x7d\xce\x4a\x55\x82\x66\x97\xf0\xbd\x94\x0b\x90\xeb\x08\x52\x3d\x22\x62\xb6\xa1\x0d\x7b\x1b\xca\xe6\x02\xbe\x44\x90\x92\x46\x21\x35\x23\x0e\xd3\xad\x4c\x2b\x88\x1c\x44\xa8\xb1\x09\x42\xbe\xa7\xaa\x56\xd9\x43\x93\xe9\x03\xd5\xe1\x5b\xac\x04\xa8\x3e\x39\x0d\x78\xf7\x25\x02\x35\xd6\x71\xcf\x28\x1f\xea\x6d\xb1\x71\xc0\xb2\x96\x5a\x66\x4c\xbf\x20\xe4\x69\xb3\xf7\x5d\x6c\xdf\xf3\x82\xeb\xf9\xc5\xfc\xc3\x8d\x2e\x64\x60\x0b\x1a\x9c\x5f\x5d\x7e\xea\x4a\xcc\x6f\xe5\x7b\x85\x45\x68\xef\xa3\xbe\xe7\x75\x4e\xb3\x2e\x7e\x75\x94\xad\xb7\xf1\xa8\xaf\x65\x9d\x0c\x40\xeb\x54\xee\xa4\xdd\x61\x41\xd4\x30\xc9\x7d\x2b\xc0\x7b\x35\xf1\xcf\xdf\xe6\x57\x73\x75\xf9\x78\x39\x34\x2a\xb5\xbc\x68\xc9\x8b\xb2\x77\xe6\xee\xb1\x6d\x00\xef\x96\x67\xa0\x8e\xde\x36\x51\x1d\xc4\x86\x25\xcd\xe5\xd6\xd1\xda\x5b\xeb\x9d\x91\x59\x56\xab\x85\x2f\x1d\xbb\x58\x7c\x5a\xdc\xc0\x88\x44\x30\x22\xda\xc5\x17\x3e\x3a\x94\xc8\x19\xd1\x6d\xd3\x1c\x0a\x8e\xa3\x1e\x45\x6c\x60\x8e\xd1\x46\x27\x35\xf7\x75\x5d\xa0\xf8\xf6\xbe\xf2\x3d\xf7\x11\xb7\x4f\x99\xfb\xc8\xe7\xb8\x2c\x1f\xb9\x20\xe7\x0a\xcf\x9c\xbd\x3b\x22\x65\x27\xec\x12\xa8\x35\x9e\x93\x37\xb5\x66\x58\xd8\x87\x01\xaa\x8d\x77\x1b\xae\x7a\x34\x27\x6f\xf0\x92\x3e\x86\xa6\x60\x5f\xdc\x37\x0c\x35\x8e\xff\x14\x99\xa4\xe1\xea\x76\xfd\x2c\xa9\x03\x43\xe8\x97\xfe\x57\x8b\xc1\x2b\xde\x1d\x7d\xc2\x73\x96\x70\x42\x6f\xf8\xb5\xb6\x1b\x6a\xd0\xeb\x7d\x5e\x43\x06\x5c\xe4\x01\x42\xf6\xeb\xd9\x87\xac\xb8\xa3\xc2\x04\x6b\x9e\x7b\xdf\x04\x35\x58\x3f\x6a\xef\x8c\x0e\x89\xeb\x1b\xcb\xfa\xe7\xd7\x16\xcb\x5e\x5b\x5c\x91\x12\x38\x71\x83\x08\x6a\x70\x91\x0c\x24\xcb\x46\x64\x3e\x6f\xe2\x6b\x49\xe6\xf6\xf3\x66\x3f\x40\x1b\x57\x29\x92\xf6\xe5\xb4\x6b\xa9\xf6\x77\xd0\x12\xd1\x83\xc4\x95\x61\xc0\xa4\x99\x6f\x0d\x2a\x4b\x43\xdf\x91\x06\x2b\x62\xcc\x84\xd6\x86\x76\xf0\x21\x16\xae\xb1\x3a\x1d\xa6\x47\x4c\x74\x02\x6c\x39\x6c\x3c\x19\xcb\xd4\x76\x71\xf0\x3d\x37\x73\xd6\x6e\xbb\xba\x52\x02\x66\xf0\xca\x05\xae\xef\x9e\x87\x03\x65\xa4\xaa\x7c\xff\x3f\x01\x00\x00\xff\xff\x4a\xd1\xb8\xab\xa3\x16\x00\x00")

func codeGolangDbGogoBytes() ([]byte, error) {
	return bindataRead(
		_codeGolangDbGogo,
		"code/golang/db.gogo",
	)
}

func codeGolangDbGogo() (*asset, error) {
	bytes, err := codeGolangDbGogoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "code/golang/db.gogo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _codeGolangQueryGogo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x93\x41\x8f\xd3\x30\x10\x85\xcf\xf1\xaf\x18\x59\x2b\x94\xac\xb6\x29\xe7\x95\xf6\x52\x2a\x6e\xac\x40\xea\x0d\xa1\xae\x13\x4f\x4d\x20\x76\x5a\xdb\x81\xad\xac\xf9\xef\xc8\x4e\x93\x42\x1a\xb4\x37\x8f\xe7\xcd\xcb\xf7\xc6\x4a\x08\x12\x0f\x8d\x41\xe0\xa7\x1e\xed\x99\x13\x85\xb0\x82\xbb\x54\xc0\xe3\x13\x94\x5f\xd2\x69\x45\xc4\x8e\xa2\xfe\x29\x14\x42\x08\xe5\xe7\xe1\xf8\x2c\x34\x12\x31\xd6\xe8\x63\x67\x3d\xe4\x2c\xe3\x75\x67\x3c\xbe\x7a\xce\x32\x2e\x85\x17\x95\x70\xb8\x76\xa7\x36\xd6\xbe\xd1\xc8\x19\xcb\xb8\x6a\xfc\xf7\xbe\x2a\xeb\x4e\xaf\x5f\x57\xba\x93\x6b\xb4\xb6\xb3\x8e\xb3\x82\xb1\x5f\xc2\x42\xce\x00\x00\xf6\xe0\x4e\x6d\xb9\xdd\xb0\x6c\x0f\x71\xb4\xdc\x35\x1a\xa3\x84\xf9\xf3\x31\x52\x0c\x90\xe5\x00\x01\xce\xdb\xbe\xf6\x10\xd2\x6c\xcc\x60\x85\x51\x08\x77\x87\x06\x5b\x19\x93\x5c\xe4\x1f\x63\xed\x88\x2e\xba\xa1\x3f\x9a\x5c\x2f\x76\xf1\x1b\x5c\x75\xad\x30\x8a\x13\xc1\x64\xdb\x1c\xc0\x20\xe4\x2d\x9a\xd1\x71\x27\x94\x2b\xe0\x7d\xda\x51\x54\xbd\x5c\x4d\x84\x72\x7f\xab\x88\x5e\x26\x1f\x34\x72\x9a\xb8\xd4\x44\x8c\x86\x0d\xcc\xc2\x6d\x37\x1f\xba\xb6\xd7\xc6\xc1\x13\x7c\xfd\xe6\xbc\x6d\x8c\xba\x4d\xfa\xe3\xe1\x8d\xb4\x7c\x02\x1b\x0d\x89\xf8\xc3\x2d\x41\xda\xef\x7e\xc6\xf0\x49\xd9\xeb\x8e\x69\x89\x32\x2a\xee\x17\xc6\x18\x3b\xf4\xa6\x86\x5c\x2f\x76\x0b\x78\xc6\xdf\xb3\xeb\xbc\x80\xfb\xf9\xfb\x0e\x71\x2d\xfa\xde\x1a\x78\x37\xeb\x86\xff\x73\x6f\x37\xff\x90\x67\xb2\x82\xed\x26\xaa\x13\xd4\x92\x38\x4f\x92\xe2\x96\x76\xb0\x0a\x2c\x1b\x29\x16\x05\x41\x56\x8f\x20\xab\x44\x14\x82\x47\x7d\x6c\x85\x1f\xff\xaf\xd2\xa2\x90\xfc\xf2\x3a\x94\x14\x69\xed\x7f\x02\x00\x00\xff\xff\x1d\xa0\x08\x81\x87\x03\x00\x00")

func codeGolangQueryGogoBytes() ([]byte, error) {
	return bindataRead(
		_codeGolangQueryGogo,
		"code/golang/query.gogo",
	)
}

func codeGolangQueryGogo() (*asset, error) {
	bytes, err := codeGolangQueryGogoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "code/golang/query.gogo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _codeGolangQueryReadGogo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x4d\x6f\x13\x31\x10\x3d\x8f\x7f\xc5\x10\xb5\xd1\x6e\xb5\xb5\x7a\x40\x1c\x8a\x72\x80\x16\x24\x24\xa8\x54\xb5\xf4\x82\x10\x72\xb2\xb3\x91\xcb\xc6\x6e\xbd\x9b\x92\xca\xf2\x7f\x47\xb3\xde\x7c\xb9\x49\x41\xa2\x9c\x12\xdb\x33\x6f\x66\xde\xbc\x7d\xde\x97\x54\x69\x43\x38\xb8\x9f\x93\x7b\x94\x8e\x54\x39\x08\xc1\xfb\x63\x3c\xb0\xe3\x5b\x3c\x1d\xa1\xc4\xe3\x10\x44\x35\x37\x13\xcc\x66\x78\xf4\xc3\x7b\x7e\x91\x17\x6a\x46\x21\x9c\xbf\xff\x32\x75\x39\x5e\x72\xf2\x99\x35\x2d\x2d\xda\x6c\xd2\x2e\x70\x12\xff\xcb\xfe\xae\xc0\x7b\x6c\x5a\xa7\xcd\xb4\x40\xe5\xa6\x0d\x4a\x29\x51\x9b\x96\x5c\xa5\x26\xe4\x43\x8e\xd9\xb7\xef\x47\x5b\xc8\x05\x92\x73\xd6\xe5\xe8\x05\x38\xfb\xab\xe9\xce\xdc\xcf\x4c\x96\x63\x99\x16\x2c\xf0\x3e\x22\x4b\x29\x73\x10\xa0\xab\x2e\xfc\xd5\x08\x8d\xae\x19\x02\x1c\xb5\x73\x67\xf8\xd8\x23\x37\xf2\x9d\x31\xb6\x55\x2d\x55\x19\x39\x57\xf4\x14\xe0\x61\x83\x87\x0f\x83\x15\x60\x2e\x20\x08\x28\xa9\x22\x87\xdc\x87\x3c\xab\x6d\x43\x59\x2e\x04\xd8\xf1\x6d\xc3\x1d\xa5\xad\xfb\x20\xa0\xb2\x7d\xf8\x05\x77\xd8\x4d\x01\x0f\xca\x21\x93\xba\x15\x2c\x04\x00\xd3\xed\x94\x99\x12\x1e\x68\x53\xd2\xa2\xc0\x83\x4a\x53\x5d\x32\x78\x17\xfa\x91\x4f\x4d\x08\x02\x62\xb0\xae\xfa\x08\xf9\xa9\xb9\xd6\x33\xc2\xf8\xc4\x05\xbc\xef\x5f\x22\x3c\xb3\xfc\xe6\xf5\x32\x8f\xea\x86\xb6\x92\x2f\xe6\x75\xad\xc6\x35\xed\xcf\x5f\x9d\xaf\x2e\x3f\x73\xf4\xf5\xe3\x1d\xad\x1b\x21\x53\xc6\xda\x1b\x07\x01\xc0\xdc\x8f\xe2\xfc\x57\x13\x65\xb2\xbf\x9f\xb1\x13\xdb\x7a\x4a\xeb\x92\x41\xf7\x74\x3e\x4c\xda\x2e\xb6\x26\xee\x31\x87\x19\xd7\x49\x22\xf3\x62\x73\x96\xe3\x10\x00\x40\x6c\x5d\x08\x80\x5c\xc0\x0e\x49\xa5\x9a\x12\x00\xfd\x3a\x5f\x62\x99\xd0\xce\xd2\x5d\x9c\x8e\xb0\xd5\x33\x92\x5f\x8d\x5e\x64\xe9\xc4\x78\xc2\xc2\xdf\x81\xb9\x64\x6a\x89\xbb\x83\x04\x1c\xe1\xf0\x49\xb9\x15\x18\x73\xf8\x6c\xee\x33\xa9\xa6\xdc\x10\xcb\xf3\xea\x63\x86\x13\x1c\x79\xa3\x6a\x5d\x46\xb2\xf7\x15\x5f\xdd\xb0\x32\x71\x30\xb5\xb5\x32\xd3\x41\x08\x29\x41\x32\x55\xf2\x8d\xaa\xe7\xd4\x2d\x23\x84\xbc\xab\x90\xc8\x3a\x2a\xe1\x09\x9f\x1f\xcc\xc4\x96\x7d\xcf\xbb\x5b\x8a\x11\x4e\x9e\x13\xff\xee\x54\x9d\x48\x08\x5a\xff\x17\x10\x8d\x65\x84\xea\xee\x8e\x4c\xc9\xe9\x4d\x81\x43\x3b\xbe\x8d\x5e\xd4\xab\x2e\x5e\x1b\x5d\x8b\x20\xfe\x60\xcf\x67\x76\x6e\xda\x7f\xb3\xe7\xce\x46\xfe\x93\x27\x9f\xbc\x98\x23\xb3\x81\x4d\x78\xd8\xa5\xed\xed\xb2\xe1\xbe\x8f\x4d\x7f\x1a\x76\x49\xf9\xdb\x7d\x5f\xf8\xc9\xfa\xfb\x06\x18\x3b\x52\x3f\x37\x37\xd1\x25\x2f\x57\xe1\x7d\xb7\xc6\xdf\x01\x00\x00\xff\xff\xde\x06\x98\x52\x59\x07\x00\x00")

func codeGolangQueryReadGogoBytes() ([]byte, error) {
	return bindataRead(
		_codeGolangQueryReadGogo,
		"code/golang/query.read.gogo",
	)
}

func codeGolangQueryReadGogo() (*asset, error) {
	bytes, err := codeGolangQueryReadGogoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "code/golang/query.read.gogo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _codeGolangTableGogo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x93\x4f\x8b\xdb\x3c\x10\xc6\xcf\xd6\xa7\x18\x44\x78\x71\x96\xc4\x79\xcf\x0b\x7b\x49\x43\xa1\x94\x2e\x4b\x49\x4f\xa5\x64\xe5\x68\xe2\xaa\xb5\xe4\x44\x92\xbb\x09\x42\xdf\xbd\x48\xb2\xf3\xc7\xf1\xd2\x9b\x46\xfa\xcd\xe3\xe7\x99\xc1\xce\x71\xdc\x09\x85\x40\x2d\x2b\x6b\xa4\xde\x3b\x37\x87\x49\x2c\xe0\xf1\x09\x8a\x75\x3c\xcd\xbd\x27\x7b\xb6\xfd\xcd\x2a\x04\xe7\x8a\x97\x74\x7c\x66\x12\xbd\x27\x44\xc8\x7d\xa3\x2d\xe4\x24\xa3\xdb\x46\x59\x3c\x5a\x4a\x32\xca\x99\x65\x25\x33\xb8\x30\x87\x3a\xd4\x3b\x19\xaf\x8d\xd5\x42\x55\x26\x1c\xad\x90\x48\x09\xc9\x68\x25\xec\xcf\xb6\x2c\xb6\x8d\x5c\x1c\xe7\xb2\xe1\x0b\xd4\xba\xd1\x86\x92\x29\x21\x7f\x98\x86\x9c\x00\x00\x6c\xc0\x1c\xea\x62\xb5\x24\xd9\x06\x42\x6b\xb1\x16\x12\x43\xd1\x49\x16\x5f\x91\x71\xd4\xa1\xc9\x9e\xf6\xc1\x68\xca\x51\x24\x9f\x01\x6b\xb7\x16\x5c\x14\x0b\x31\x35\x53\x15\xc2\x64\x27\xb0\xe6\x21\x6c\x87\x7f\x0c\xb5\xf1\xbe\xe3\xd2\x7b\x2f\x72\xb9\x58\x87\x6f\xd0\xaa\xa9\x99\xaa\xa8\xf7\x70\x96\x15\x3b\x50\x08\x79\x8d\xaa\x57\x5c\xb3\xca\x4c\xe1\xff\x38\xc6\x40\xbd\x5e\x44\x58\x65\xae\x29\xef\x5f\xcf\x3a\xa8\xf8\xb9\xa3\xab\xbd\x27\x3e\x8d\x64\x10\x6e\xb5\xfc\xd0\xd4\xad\x54\x06\x9e\xe0\xfb\x8f\x34\x90\xfb\xa4\xbf\x66\xff\x48\x4b\xcf\xc6\x7a\x41\xef\xe9\xec\xde\x41\x9c\xef\x66\xe0\xe1\x4b\xa5\x2f\x33\xf6\x63\x2e\x03\xf1\x30\xd2\x46\xc8\xae\x55\x5b\xc8\xe5\xe8\xeb\x14\x9e\xf1\x6d\x70\x9d\x4f\xe1\x61\xb8\xdf\x14\x57\xa3\x6d\xb5\x82\xff\x06\xaf\xee\x7d\xdf\xab\xe5\x8d\xf3\x8c\x97\xb0\x5a\x06\x3a\x9a\x1a\x83\xf3\x88\x4c\xef\xdd\x26\x29\x47\xb2\xde\xc5\x28\xe0\x78\xf9\x08\xbc\x8c\x8e\x9c\xb3\x28\xf7\x35\xb3\xfd\x2f\x58\xec\xb5\x90\x4c\x9f\x68\xbf\xa0\x97\x54\x7f\xc6\x93\x8f\x7c\xb7\x4b\x31\x83\x49\xab\x0e\xa2\xc5\xab\x65\x7e\x53\xe2\xd0\x62\xd8\xe6\xbd\x6e\x1b\xdf\x68\xdf\x15\x99\xb4\xd0\x5b\x51\xa1\x38\x1e\xaf\x34\x3f\x85\xfa\x1d\xcd\xc8\xd2\xae\xe7\x56\x71\x88\x6a\x64\xbc\xcf\x34\x4e\xbc\x69\x61\xf1\x16\x89\x6a\x7f\x03\x00\x00\xff\xff\x4e\x98\x23\x04\xa4\x04\x00\x00")

func codeGolangTableGogoBytes() ([]byte, error) {
	return bindataRead(
		_codeGolangTableGogo,
		"code/golang/table.gogo",
	)
}

func codeGolangTableGogo() (*asset, error) {
	bytes, err := codeGolangTableGogoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "code/golang/table.gogo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _codeGolangTableIndexGogo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x91\xdf\x4a\xeb\x40\x10\xc6\xaf\xb3\x4f\x31\x84\x72\x48\x4a\x9b\x07\x38\x50\x0e\x1c\xb5\x50\xd0\x52\xb1\x78\x23\x22\x6b\x32\x09\x91\x64\x23\xfb\x87\x2a\xcb\xbc\xbb\xec\x6e\x52\x53\x0c\x62\x2f\xec\x4d\x33\xb3\xdf\xfe\xe6\xdb\x6f\xac\x2d\xb0\xac\x05\x42\xac\xf9\x73\x83\x59\x2d\x0a\x7c\x8b\x89\xac\x5d\xc2\xcc\x17\xf0\x77\x05\x19\x2c\x89\x98\x7e\x7f\x45\xb0\x36\xb4\xb3\x2d\x6f\x91\x68\xe3\x25\x4a\x4b\x93\x6b\xcb\x22\x77\x4d\x72\x51\x21\xcc\xca\x1a\x9b\xc2\x5d\xee\xf5\x6b\x57\x2b\x22\x06\x00\x8e\xe2\xcf\x7b\xca\xa8\xb1\x77\x43\xe2\xaa\x6b\xb8\xa8\x62\x22\xe8\xe5\x4b\x40\x51\x10\x31\x62\xac\x34\x22\x87\xa4\x85\xf9\xd3\xd1\xcb\xde\x7b\x0f\xac\x9b\x4a\xa6\xb0\xc5\xc3\x94\xd1\x24\x85\xf9\xe4\x03\x2c\x8b\x22\x89\xda\x48\x01\x7f\xa6\x04\x76\x34\xd9\x4c\x33\x52\xb8\xbb\xbd\x5e\x77\xb2\xe5\x3a\x49\xe1\xe1\x51\x69\x59\x8b\xca\x91\x7b\xf0\xd0\x72\xb3\x46\x39\xbd\x2c\xbe\xc9\x2a\x8a\xe2\x63\x32\x97\xff\x2f\xba\xc6\xb4\x82\x08\x56\xf0\x2f\x5e\xf4\x98\x90\x4b\xf4\x43\x83\x3b\x2e\x79\xab\xbc\xc1\x5a\x68\x94\x25\xcf\xd1\xd2\x89\xcb\x51\xff\x3c\xab\x5e\x5a\x97\xbd\x26\xdb\xa8\x1d\x57\xea\xd0\xc9\x22\x9c\x0e\x55\x62\xb2\xe3\x9b\xee\x79\x63\x90\x28\x5d\x40\xf8\x0d\x14\x6c\x14\x9e\xa0\xae\x44\xde\x15\x18\x40\xe1\x5b\x66\xe1\x7f\x12\x77\xc2\x09\xb7\xbe\xca\x3e\x55\x21\xc2\x73\xe3\x1c\x16\xa2\x7e\x7b\xdf\x53\xbb\xb6\xd6\x17\x1f\x01\x00\x00\xff\xff\xd0\x2a\x48\xd4\xc0\x03\x00\x00")

func codeGolangTableIndexGogoBytes() ([]byte, error) {
	return bindataRead(
		_codeGolangTableIndexGogo,
		"code/golang/table.index.gogo",
	)
}

func codeGolangTableIndexGogo() (*asset, error) {
	bytes, err := codeGolangTableIndexGogoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "code/golang/table.index.gogo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _codeGolangTablePrimaryGogo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x91\x6f\x6b\xa3\x40\x10\xc6\x5f\xbb\x9f\x62\x90\x70\x68\x48\xfc\x00\x07\xe1\xe0\xee\x1a\x28\x69\x83\xa5\xa1\x6f\x4a\x29\x5b\x1d\xc5\xa2\x6b\xd8\x3f\x84\xb0\xcc\x77\x2f\xeb\x6a\x6a\x68\x12\x48\xa1\xbe\xd1\x9d\x7d\xe6\x37\x8f\xcf\x58\x9b\x63\x51\x09\x84\x50\xf3\xb7\x1a\x93\xad\xac\x1a\x2e\xf7\x21\x91\xb5\x73\x98\xf4\x47\xf8\xbd\x80\x04\xe6\x44\x4c\xef\xb7\x08\xd6\x0e\x17\xc9\xa6\xeb\x5a\xf3\x06\x89\xd2\x15\x28\x2d\x4d\xa6\x2d\x0b\x5c\xb7\xe4\xa2\x44\x98\x14\x15\xd6\xb9\x23\x1c\x9a\x96\xae\xa2\x88\x18\x00\x38\x58\xa7\xe8\x21\xa3\xc2\xc6\xcd\x0a\xcb\xb6\xe6\xa2\x0c\x89\xa0\x97\xcf\x01\x45\x4e\xc4\x88\xb1\xc2\x88\x0c\xa2\x06\xa6\xaf\x67\x2c\xdd\x97\x32\x86\x35\xee\xd2\x55\x14\xc3\xf4\xbc\x6f\xcb\x82\x40\xa2\x36\x52\xc0\xaf\xb3\x2a\x3b\x9a\x69\x2e\xd0\x62\x78\x7c\xb8\x5b\xb6\xb2\xe1\x3a\x8a\xe1\xf9\x45\x69\x59\x89\xd2\xcd\xe8\x47\x0c\x25\x37\x75\x14\xd4\xfb\xec\x62\x58\x41\x10\x1e\xa2\xf9\xff\xf7\x5f\x5b\x9b\x46\x10\xc1\x02\xfe\x84\xb3\x1e\xe4\x83\x09\xae\xf1\x99\x72\xc9\x1b\xd5\xf9\xac\x84\x46\x59\xf0\x0c\x2d\x1d\x99\x1d\xd5\xaf\x75\xdc\x89\xab\xa2\x57\x25\xb7\x2a\xe5\x4a\xed\x5a\x99\xfb\xdb\xe1\x14\x99\xe4\xf0\x6b\x4f\xbc\x36\x48\x14\xcf\xc0\x3f\x03\x05\x6b\x85\x47\xa8\x1b\x91\xb5\x39\x7a\x90\xff\x96\x89\x7f\x9f\xc4\x1d\x71\x7c\xd7\x57\xd9\xa7\xca\x27\xf9\xad\x54\x87\xe5\xa8\x9f\xdf\xfe\xc9\xcd\x5b\xdb\x9d\x3e\x02\x00\x00\xff\xff\x89\x14\x18\x6d\xdb\x03\x00\x00")

func codeGolangTablePrimaryGogoBytes() ([]byte, error) {
	return bindataRead(
		_codeGolangTablePrimaryGogo,
		"code/golang/table.primary.gogo",
	)
}

func codeGolangTablePrimaryGogo() (*asset, error) {
	bytes, err := codeGolangTablePrimaryGogoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "code/golang/table.primary.gogo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _codeGolangTableReadGogo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x57\x4d\x6f\xe3\x36\x13\x3e\x53\xbf\x62\x5e\x21\x0e\xa4\x85\x42\x78\x81\x17\x3d\x6c\xe1\x02\x9b\x2f\x34\xdd\xc4\x9b\xac\xd3\xed\x21\x08\x0a\x59\xa2\x5c\x66\x25\xd2\xa6\xe8\xdd\x04\x02\xff\x7b\x41\x8a\xb6\xa8\x0f\x37\x4e\x93\x53\x7d\xb1\x49\xcd\x3c\xf3\xcc\xcc\xc3\xa1\x5c\x55\x29\xc9\x28\x23\xe0\xcb\x78\x9e\x13\x2c\x48\x9c\xfa\x4a\x55\xd5\x11\x1c\xf0\xf9\x03\x7c\x98\x00\x86\x23\xa5\xbc\x6c\xcd\x12\x08\x0a\x78\xf7\x67\x55\xe9\x27\x78\x1a\x17\x44\xa9\xd3\xe3\xab\x85\x08\xe1\x9c\xc8\xe4\xaf\xe3\xa7\xeb\x4f\x41\x22\x1f\x21\xe1\x4c\x92\x47\x89\x4f\xea\xef\x08\x96\xdf\xe0\x5d\xcb\xed\xfa\x53\x08\x41\x7b\x2b\x02\x22\x04\x17\x21\x54\x1e\x00\x80\x20\x72\x2d\x18\x14\xd8\x40\x7f\x66\x44\x23\x6b\x24\x3c\xbb\xb9\x3c\xe7\xa2\x88\x65\x10\x6e\xd6\xd7\xb1\x88\x8b\x32\x08\x31\xc6\xa1\xa7\xbc\x7d\xc8\x5a\xc4\x3e\xd7\x84\xb3\x94\x4a\xca\x59\x09\x77\xf7\xa5\x14\x94\x2d\x22\x88\xc5\xa2\x04\x8c\x31\x65\x92\x88\x2c\x4e\x48\xa5\x9e\x4b\x80\xcf\x1f\x4a\xb3\xa5\x6b\x58\xe0\x9b\x35\x11\x4f\x36\x48\x9d\x4a\x13\x28\x02\xdf\x8f\x60\x1c\xc1\xfb\x3a\x92\x49\x43\x63\xd0\xcc\x00\xfc\x6f\x02\x8c\xe6\x16\xd7\x29\x0e\xa3\xb9\x89\x60\xf6\xd5\xc6\x23\x27\x2c\xd0\xc1\x43\x98\x4c\x60\xbc\xdb\x8b\x8b\x12\x4f\xc9\x8f\xc0\x67\x1c\x04\x49\xb8\x48\xfd\xd0\x41\xb2\xd6\x1a\xe9\x6e\x7c\x1f\x69\xb7\x3d\x4b\xfb\xea\xba\xde\xdd\xef\x27\x8d\xbd\x6a\x3a\x76\x6a\xfa\x2c\xff\x13\xbe\x66\xd2\x41\x7c\x55\x1a\x94\xc9\x9f\xfe\xef\x70\x47\xab\x52\x6b\x61\xe3\xd6\x34\xc6\x9f\x9d\x5d\x9e\x9d\xdc\xfa\x51\xb3\x93\x68\x22\xc1\xfb\xd0\xdd\x3b\xff\xf2\xf9\xca\x5d\x8f\x4a\xbb\xaa\x1b\xb6\xb4\xe8\x0e\x09\x27\x84\xcd\xf6\xf4\xb8\xce\xb7\xe5\x69\x45\xd3\xa4\x16\x6a\xc9\xb9\xd2\x59\x95\x30\x81\x78\xb9\x24\x2c\x0d\x56\xba\xb6\x7f\xfc\x7a\xf6\xe5\xcc\xea\x65\xd0\x60\x54\x3a\x4f\x97\xce\xd3\x65\x19\x41\x5d\x80\x12\xff\xc6\xa9\x1b\x36\x02\x1f\x3e\x4e\x4f\xc1\x0f\x5d\x21\xae\x74\x5a\x59\x21\xf1\x6c\x29\x28\x93\x59\xd0\xf2\x36\xc1\xc0\xd7\xa3\xa0\x39\x37\x5b\x85\x24\x9d\x7e\x46\xb0\x7a\x89\x1c\xba\x02\xdb\x53\x0e\x5c\xa4\x44\x1c\x3f\xc1\x76\x9d\x65\x25\x91\x40\x99\x8c\x20\xa7\x05\xb5\x3f\x5f\x2c\xfe\x97\x08\x68\x2b\x8e\x57\x4b\xa7\x55\xee\x4e\x95\x4e\x78\xbe\x2e\x4c\xe3\x22\x3f\x8c\xfe\x13\x6a\xeb\x40\xdb\x5e\x6e\xe7\x71\xdd\xbf\x5f\x5a\x7c\x69\xb6\x69\x71\x7b\x7f\x90\xea\xe5\xc5\xd5\xc5\x2d\x8c\xd2\x08\x46\xa9\x43\x7a\x88\x78\x0d\x6a\x35\xd3\x98\x2a\x20\x79\x49\xf6\x8d\xf3\x4c\x8c\x2e\xf6\x1b\x1d\xbc\x55\x6f\x34\xbf\xe8\xe0\x75\xdd\xfb\x07\x6f\x05\xdd\xe1\x0b\xfb\x9f\x23\xc1\x7f\xb8\x77\x73\x3a\x1f\xb8\x4a\x1c\xbe\xc8\x43\xdd\x9b\x18\xa1\x81\xdb\xf4\x23\x63\x5c\xc6\x92\x64\x01\x11\x22\x02\xdf\x64\x01\xa3\x12\x46\xdf\xfd\x2d\x60\xe8\x21\xe5\xa1\x94\x64\x44\x80\xe6\x81\x4f\x72\x5e\x92\x20\xf4\x3c\xa4\xef\xda\xfa\x20\xb6\xa9\x57\xca\x43\x19\xb7\xe6\x53\xcd\xd0\x64\x81\xbe\xc7\x42\xdf\xcf\xd0\x32\xf6\x3c\x84\xf4\xeb\x9b\x88\xd9\x82\xc0\x01\x65\x29\x79\x8c\xe0\x20\xa3\x24\x4f\x35\xb8\x31\x3d\xd7\xab\x52\x29\x0f\xd5\xc6\x34\xb3\x16\xf8\xa2\xbc\xa5\x05\x81\xfa\x91\x0e\x50\x55\xf6\x49\x0d\x0f\xe6\x56\xdb\xf8\x19\x21\xba\xce\xd3\x75\x9e\xeb\x17\xc9\xdd\xfe\xdb\xf5\xec\xe6\x52\x5b\xdf\x3e\x2d\x49\x43\x84\xb0\xb4\x8e\xed\x2c\x3c\x84\x74\xed\x27\x75\xfe\xb3\x24\x66\xc1\xfe\x39\x9a\x97\xd7\x26\x4b\x2e\x3a\x89\xee\x60\x7e\xd8\xa1\x1d\xb5\x32\xb6\x98\x87\xfa\x3d\x0b\x77\x2c\xc3\xc8\xcd\xe5\x48\x29\x84\x90\xd7\xda\xf0\x10\x0a\x3d\x34\x20\xa9\xae\xa6\x3c\x84\x6c\x3b\xdf\xa2\x99\x48\x16\xdd\x5e\x7c\x98\x80\xa4\x05\xc1\xbf\x33\xfa\x18\x74\x33\x86\xb1\x16\xfe\x00\xe6\xa6\x52\x1a\x17\x3a\x1f\x9a\xf5\x1a\xde\x9f\x89\x9b\xcf\x40\xf5\x60\x02\x87\x3d\x9e\x3d\x67\x5d\xd3\x86\x9b\x6e\x89\x4d\x71\x18\xb1\x0f\x88\x9a\x16\x39\xda\xfb\x67\x31\xa3\x7e\x6e\xf8\x6b\x9c\xd3\xb4\xee\xdd\xae\xe0\xdb\x1d\x2d\x74\xf0\x17\x3c\x8f\xd9\xc2\x57\xaa\x5b\x6f\xdc\x3d\x18\x5f\xe3\x7c\x4d\x4c\x6f\x95\x0a\x4d\x84\xfe\x29\xe9\xf5\xe6\x8c\x25\x3c\xb5\x84\x87\xf9\xd4\x16\x02\x9f\x12\xfd\x3d\xa8\x60\xaf\x53\x9d\xe6\xb7\x87\xea\x21\xb5\xbd\x42\xea\x7f\x39\x87\x7c\xfe\x50\xcf\x35\xe7\x5f\xc3\x9e\x7f\x19\xba\xaf\x68\xff\x62\xd4\xf7\x5e\xb4\xdf\x70\xbe\x8f\xdf\x6c\xba\xeb\x61\x68\x92\xdd\x8c\xd0\xa1\x91\x6e\x79\xb8\xb3\xee\xd0\x38\x85\x3f\xef\x9a\x16\xe3\x66\x56\x20\x34\x17\x24\xfe\xe6\x76\xc2\x38\x6f\x5a\x51\x55\xa6\x8d\x7f\x07\x00\x00\xff\xff\xd2\x09\xb0\xad\xf5\x0f\x00\x00")

func codeGolangTableReadGogoBytes() ([]byte, error) {
	return bindataRead(
		_codeGolangTableReadGogo,
		"code/golang/table.read.gogo",
	)
}

func codeGolangTableReadGogo() (*asset, error) {
	bytes, err := codeGolangTableReadGogoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "code/golang/table.read.gogo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _codeGolangTableUniqueGogo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x91\xdd\x4a\xfb\x40\x10\xc5\xaf\xb3\x4f\x31\x84\xf2\x27\x29\x6d\x1e\xe0\x0f\x45\xf0\xa3\x20\x6a\xa9\x58\xbd\x11\x91\x35\x99\x84\x48\xb2\xd1\xfd\xa0\xc8\x32\xef\x2e\x9b\x4d\xda\x94\x06\xb1\x17\xe6\x26\xd9\xd9\x33\xbf\x39\x39\x63\x6d\x86\x79\x29\x10\x42\xcd\xdf\x2a\x4c\x8c\x28\x3f\x0d\x86\x44\xd6\xce\x61\xe2\x4f\xf0\x7f\x01\x09\xcc\x89\x98\xfe\xfa\x40\xb0\xb6\xab\x27\x2b\x5e\x23\xd1\xe3\x0d\x28\x2d\x4d\xaa\x2d\x0b\x5c\x97\xe4\xa2\x40\x98\xe4\x25\x56\x99\x6b\xed\xd5\x4b\x57\x50\x44\x0c\x00\x1c\xa4\x15\x74\x8c\x41\x61\xe3\x66\x84\x45\x53\x71\x51\x84\x44\xd0\xc9\xe7\x80\x22\x23\x62\xc4\x58\x6e\x44\x0a\x51\x0d\xd3\xd7\xbd\x95\x4d\xeb\xde\xc3\xee\x0a\x19\xc3\x0a\xb7\xc7\x46\xa3\x18\xa6\x23\xf6\x2d\x0b\x02\x89\xda\x48\x01\xff\x8e\xaf\xed\x60\xa8\x19\xeb\x8f\xe1\xe1\xfe\x76\xd9\xc8\x9a\xeb\x28\x86\xe7\x17\xa5\x65\x29\x0a\x47\xed\xa0\x7d\xc9\xcd\x19\x24\xf4\x3e\xfb\x29\xa5\x20\x08\x77\x99\x5c\x9e\x5f\x34\x95\xa9\x05\x11\x2c\xe0\x2c\x9c\x75\x1c\x9f\x48\xf0\x2b\x7f\x6b\x2e\x79\xad\x5a\x7f\xa5\xd0\x28\x73\x9e\xa2\xa5\x03\x93\x83\xfa\x89\x4e\x5b\x6d\x99\x77\xa2\xe4\x5a\xad\xb9\x52\xdb\x46\x66\xfe\xb6\x3f\x45\x26\xd9\xfd\xd2\x13\xaf\x0c\x12\xc5\x33\xf0\x4f\x4f\xc1\x4a\xe1\x01\xea\x4a\xa4\x4d\x86\x1e\xe4\xbf\x65\xe2\xdf\xa3\xb8\x03\x8e\xef\x3a\x96\xed\x55\x3e\xc1\xd3\xd2\xec\xb7\xa1\xfe\x7c\xdb\x63\x9b\xb6\xb6\x3d\x7c\x07\x00\x00\xff\xff\x9c\xd9\x1d\xe6\xb9\x03\x00\x00")

func codeGolangTableUniqueGogoBytes() ([]byte, error) {
	return bindataRead(
		_codeGolangTableUniqueGogo,
		"code/golang/table.unique.gogo",
	)
}

func codeGolangTableUniqueGogo() (*asset, error) {
	bytes, err := codeGolangTableUniqueGogoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "code/golang/table.unique.gogo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _codeGolangTableWriteGogo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\x5b\x6f\xdb\x36\x14\x7e\x96\x7e\xc5\x99\xd0\x00\x52\xab\x12\x79\x18\xf6\xb0\x2e\x2b\x9c\xd8\xc1\xbc\xa4\x6e\x96\x4b\xf7\x50\x0c\x85\x62\x51\x1e\x1b\x89\xb2\x29\x3a\x17\x08\xfa\xef\x03\x45\xc9\xba\x51\x92\x65\xbb\x40\x81\x55\x2f\x8e\xa8\x73\x0e\xcf\x21\xbf\xf3\xf1\x63\xe2\xd8\xc5\x1e\xa1\x18\x0c\xee\xdc\xfb\x18\x3d\x31\xc2\xb1\x91\x24\x7a\x1c\xbf\x85\x57\xe1\xfd\x57\xf8\xf5\x04\x10\xbc\x4d\x12\x5d\xf7\xd6\x74\x0e\x66\x00\xaf\xbf\xc4\xb1\xf8\x84\x66\x4e\x80\x93\x64\x7c\xfa\x61\xc1\x2c\x18\x63\x1f\x73\x7c\xfa\x72\x75\x61\xce\xf9\x33\xcc\x43\xca\xf1\x33\x47\x67\xf2\xd7\x86\xe5\x03\xbc\xae\xf8\x5d\x5d\x58\x60\x12\xca\x7f\xf9\xd9\x06\xcc\x58\xc8\x2c\x88\x75\x8d\x78\xc2\xf2\xe4\x04\x28\xf1\x21\xd6\x21\x7b\x18\xe6\x6b\x46\xe1\x38\x33\x8d\xd0\x0c\x3f\x99\x86\x9b\xce\x29\x1c\x18\x5e\xad\x09\xc3\xae\x61\xa5\x2e\x89\x5e\x72\x0a\x90\xcc\x4d\xe4\x25\xf2\x40\x37\x7f\x5d\x9e\x87\x2c\x70\xb8\x69\xe5\xef\x57\x0e\x73\x82\xc8\xb4\x10\x42\x96\xbe\x65\xad\xea\x3a\xe7\x21\x75\x09\x27\x21\x8d\xe0\xf3\x3f\x11\x67\x84\x2e\x6c\x70\xd8\x22\x02\x84\x10\xa1\x1c\x33\xcf\x99\xe3\x38\x51\x14\x2f\x72\x26\x1e\xf8\x98\x9a\x45\x14\x0b\x7e\x87\xe3\xd2\x4a\xac\x22\xb1\x25\x79\xe8\x62\x5c\x3c\xc6\x78\x72\x39\xb9\x9d\x18\x76\x75\xf4\xfc\xfa\xe3\x87\xfa\xd8\x51\x54\x1f\xf9\xfb\x8f\xc9\x75\xc3\xb5\x62\x96\x6c\xfe\x5a\x66\x49\x94\xea\xa9\x65\x92\x2d\xdb\xf8\x54\x2e\x5c\x2d\xae\x4c\x3e\x42\x7f\x86\xa4\x5c\xab\x0d\x06\x8c\x66\x63\x30\x2c\xd5\xa4\x2b\x31\xa7\x17\x70\x74\xb3\x64\x84\x72\xcf\xac\x44\x59\xa5\xde\x86\xd8\xd1\x28\xdd\xc5\x1a\x74\x02\x84\x9f\xf1\x3c\xdb\x26\x09\x85\x95\xdc\x18\x61\x0d\x00\x4d\xe0\xa8\xd1\x56\xda\xe0\x12\xea\x7a\x31\x53\x9b\xbd\x09\x9c\x15\x0c\x47\x0b\xc3\xd1\xda\xe7\xe9\xa0\x58\x9c\x00\xb9\xf7\x68\xd2\x51\x66\x0e\x31\x61\xff\x53\x6f\x8f\x8d\x28\x0d\xb9\xc3\xb1\x67\x62\xc6\x6c\x30\x44\x09\x70\x14\xc1\xd1\xa3\xb1\x89\xaa\xe8\x37\x99\x14\xba\x0e\x9f\xa2\x91\xe7\xe1\x39\xc7\xae\xb9\xc5\x02\xdd\x2d\x5d\xa7\x8b\x40\xd6\xe9\xf7\x08\x02\x67\xf9\x59\xae\x54\x19\x7e\xdb\x12\x4c\x05\x11\x72\x4a\xb9\x4a\x59\xf8\xc3\x10\x44\x11\x78\x78\x1d\x7b\x12\x48\x27\x3f\xdc\x5d\x8d\x47\x4d\x7e\x68\x72\xc1\xcd\xe4\xf6\x70\x84\xd1\x49\x16\x2d\x44\x21\x3d\x3d\x82\x7d\xb7\x5a\x8f\xfc\xf0\xe8\xf8\x6b\xac\x08\x9b\xb9\x85\x0c\x1e\x6c\x78\x14\xdf\x99\x43\x17\x78\xb3\xe6\xc5\xbc\x59\xe8\x13\x70\x96\x4b\x4c\x5d\x53\xbe\xdb\x15\x7e\x31\x8e\x84\xc1\x7b\xc3\x86\x07\xab\xe0\x93\x6c\xee\x8d\xa7\x7c\xb7\xe1\xb1\xdc\x0a\xcb\x92\xc1\x32\xb2\xab\x84\x97\xcf\x65\xd8\x46\x16\xb7\xd3\x5c\xc5\x8f\x96\xde\x95\x4a\xa5\xdd\x77\xa0\xcd\x4e\xca\x94\x93\xe4\xa4\xd9\xdb\x0a\x67\x0c\xb7\xb6\x82\xd0\x17\xd5\x9e\x6d\x01\xf5\x3c\xf4\xd7\x01\x6d\x41\xb6\x90\x2a\x72\x9b\x5f\x7d\xb5\xe1\x55\xba\xba\xc2\x32\x0d\x7b\x9e\xae\x75\x92\x54\xac\x89\x97\x99\xa1\x69\x74\xc5\x48\xe0\xb0\x97\x92\x45\xc9\x8a\x86\xbc\xb0\x1c\xad\x79\x38\xa5\x73\x86\x03\x4c\x79\xcd\x5e\xc0\x58\xda\x8d\x4f\xcf\xd2\x64\x05\x94\x21\x3f\x56\xca\x61\x31\x75\x6b\xe9\x60\x3f\xc2\xa5\x21\x75\x2c\xbd\x11\x23\x1f\x68\x7e\x29\x01\xb1\x93\x0e\xa6\xb3\x9b\xc9\x75\xa3\xd3\xa7\xb3\xdb\x8f\xfd\xdd\x6f\x1e\x45\x56\x7d\xec\xd3\xe8\xf2\x6e\x72\xf3\x8d\x28\x01\x9a\xba\x21\x05\x85\xec\xa3\x32\x6d\xdc\xfb\x0e\x7d\x18\x4e\x1b\x85\xaf\xc2\x55\x70\x0a\x11\xe3\xc7\xef\x80\xc0\x6f\x99\x48\x4b\x13\xb0\xde\x01\x79\xf3\xa6\xc4\x2d\x32\xc6\xa6\x2b\xd3\x57\x1b\x8c\xf7\x15\x71\x9a\x25\x59\xb5\xaa\x13\x90\x5c\xe4\x6a\xd9\x79\x38\x41\x1e\x32\xe0\xf6\x0d\xd0\x0f\xfe\xa1\xc0\xcf\xec\x1d\xea\x16\xf6\xb3\xb5\xef\x8b\xdb\x44\x31\x72\x4b\x02\x5c\x73\x24\x9e\x68\x7f\xb4\xc1\xba\xdc\xeb\xa6\x2a\xc9\x9f\x36\xae\xab\x04\xf9\x24\x06\x93\xc4\xaa\x78\x27\x69\x83\x0d\x08\x79\x5c\xf7\x2f\x3d\xcd\x76\x16\xb1\x6b\xb5\x29\x97\xda\x89\xa2\xa7\x90\xb9\x0a\xd3\xb6\x3c\x72\x17\x53\x59\xa3\xd5\x9a\x56\x25\xb5\x72\x0e\x13\x3a\x0f\xdd\xfa\x46\x74\x65\x20\x1d\x18\x92\xbf\x3d\x79\xb4\xe7\x30\x60\xc6\xfe\xed\x84\x3a\x07\x6e\xc3\xb0\x9b\x11\x05\xdf\xee\x04\xe1\x21\xf0\xdd\xad\x56\x25\x6c\xb7\x80\x6c\xf3\x6c\xe9\xc3\xe1\x21\xf1\xb7\x1d\xee\x0e\x8b\x37\x15\xce\x76\x5b\x73\x05\x56\x1a\x27\x6d\x61\xd3\x2f\xdd\x72\x52\x2f\x94\xde\x0e\x6a\x6c\xd0\x4d\xaf\x50\x67\x87\xbd\xeb\xc9\xb8\xf9\x01\x56\x3f\x76\x48\xe3\xd8\xc9\x4e\x96\x0b\xfc\xd2\x2f\xc1\xda\xce\x17\xdf\x89\xf8\x94\x46\x98\xf1\xa9\xbb\xa9\x3c\xbb\x5d\x5e\x96\xbe\x99\x96\xae\x69\xf5\x4a\x35\x4d\xab\x14\xa9\x6b\x5a\xa2\x6b\x9a\xaa\x69\x4f\x60\x33\x72\xfb\xb2\xc4\x60\x2c\x42\xdf\xa1\x0b\x23\x49\xcc\x72\x0a\xbd\x30\x39\xc0\x25\xf8\xd4\xe1\xf3\x7f\x7b\x24\xb3\xb8\x17\xfe\x50\xcd\x3f\x54\xf3\xf7\xa1\x9a\x85\x30\xfe\x22\xaf\x72\x9b\xeb\x76\x0a\xd2\xba\x1e\x6e\x06\x86\x81\xba\x1a\xfa\xb5\x35\x54\x0e\xc0\x03\x6a\x6c\xf8\x4e\x5a\x06\xf6\xd1\xdc\xb0\x83\xee\x86\xbd\xc5\x5a\xab\xfe\xee\x0a\x7d\xac\x8a\x53\x7a\x06\x89\x4d\x18\xa6\xc7\xbb\xf2\xda\x47\x93\xc3\x60\x5d\xde\x95\xc9\x7e\xda\x7c\x9b\x25\xdb\x6f\xdb\x41\xc5\xba\xad\xf9\x34\x39\x5e\x3d\xaa\x60\x7e\xf8\x9f\x5c\x43\xd5\x57\xcf\x16\x4c\x6b\x9a\x76\x68\x08\x77\x43\xb7\x63\xc2\xdd\x91\xda\x86\xd0\xdd\x77\xa1\xe3\x7e\xd8\xc8\x40\xa5\x0c\xbe\xbd\xdc\x1f\xf4\xcf\xd7\x38\x4e\x13\xfc\x2f\x00\x00\xff\xff\xfe\x5c\x0e\x5b\xc7\x1d\x00\x00")

func codeGolangTableWriteGogoBytes() ([]byte, error) {
	return bindataRead(
		_codeGolangTableWriteGogo,
		"code/golang/table.write.gogo",
	)
}

func codeGolangTableWriteGogo() (*asset, error) {
	bytes, err := codeGolangTableWriteGogoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "code/golang/table.write.gogo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsMysqlTableSqlGogo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x92\xdf\x6f\x9b\x30\x10\xc7\x9f\xc7\x5f\x71\xb2\x22\x35\x95\xd2\x68\x0f\x7b\x98\x56\xf5\x81\x80\xbb\x79\x69\x9c\x8e\x19\xa9\x7d\x5a\xe8\xb8\x74\x48\x60\x3a\x02\xd2\x22\xeb\xfe\xf7\xc9\x36\x02\x77\xdd\x1b\xf7\xbd\xaf\xef\xc7\x87\x33\xa6\xc4\x63\xa5\x11\x58\x5f\x3c\xd5\xc8\x88\x8c\xb9\x82\x85\x0b\xe0\xd3\x0d\xac\x95\xfb\xba\x22\x8a\x5c\xe2\xa5\xab\x9a\xa2\x3b\xdb\x94\x37\xad\xef\xbd\xb2\xc5\xb3\x73\x25\x19\x8f\x15\x07\x15\x6f\xee\x38\x1c\x8c\x19\x5d\xe9\x46\x16\x0d\x12\x1d\x60\x19\xbd\xb3\x95\xba\x42\x3f\x23\x2c\xaa\x15\x2c\x8e\x15\xd6\x65\x50\xf1\xd6\xc6\x27\x22\x6b\xf4\xc9\x75\xba\x49\xda\x7a\x68\x34\x11\x40\x20\xaa\xf3\x0b\x12\x85\x8a\x1c\xea\xfa\xb5\x92\xe2\xb1\x18\xea\x9e\x08\x92\xfd\x6e\xc7\xa5\x82\x8b\x29\x9b\xb4\x4d\x83\xba\x27\xba\x58\xf9\xa9\x50\x97\x44\x11\x80\xed\xf2\x6a\xc6\x41\x57\xbf\x07\x0c\x86\xcc\x9d\x70\x1a\xdd\xb9\x14\xdf\x72\x0e\x5b\xfe\xe8\x76\xf6\xee\xb5\x5f\x39\xdf\x1e\x96\xb3\xf6\xb5\xad\xb4\x5f\x10\xd8\x8a\x11\x5d\xae\xa6\x76\x73\xf3\xfb\x4c\xec\xe2\xec\xd1\xd6\xb3\x4f\x47\xe8\x6f\xdf\x46\x97\xc0\xe5\x67\x21\xf9\x4d\x00\x9a\xeb\x67\xf7\x43\x85\xd6\x6d\xba\x61\x44\x10\xe7\x6a\xff\x43\xc8\x24\xe3\x76\xff\xd9\x1b\x0f\x7d\x2b\xf4\xcf\x0e\x2d\x04\x60\xef\xad\x37\xe5\xb7\x71\x7e\xa7\x20\xf9\x12\x67\xdf\xb9\x0a\x0b\x27\xbf\x8a\xee\x84\x3d\xb0\xa1\x3f\x7e\x6c\x9e\x3e\xb0\x7f\x98\x7a\xdf\xcc\xf4\x3a\x8a\x8c\x09\x18\x56\xba\xc4\x3f\x01\x42\x61\x63\x3c\x85\x67\x23\x64\xca\x1f\x1c\x42\x67\x1e\x09\x8a\xf4\xe1\x00\x7b\xf9\xbf\x73\x5a\x4e\xd6\x37\x70\xae\x23\x63\x50\x97\xd3\xed\x3a\xbc\x7f\x03\x00\x00\xff\xff\xbd\x5b\x89\x7c\xf0\x02\x00\x00")

func scriptsMysqlTableSqlGogoBytes() ([]byte, error) {
	return bindataRead(
		_scriptsMysqlTableSqlGogo,
		"scripts/mysql/table.sql.gogo",
	)
}

func scriptsMysqlTableSqlGogo() (*asset, error) {
	bytes, err := scriptsMysqlTableSqlGogoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/mysql/table.sql.gogo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"code/golang/db.gogo": codeGolangDbGogo,
	"code/golang/query.gogo": codeGolangQueryGogo,
	"code/golang/query.read.gogo": codeGolangQueryReadGogo,
	"code/golang/table.gogo": codeGolangTableGogo,
	"code/golang/table.index.gogo": codeGolangTableIndexGogo,
	"code/golang/table.primary.gogo": codeGolangTablePrimaryGogo,
	"code/golang/table.read.gogo": codeGolangTableReadGogo,
	"code/golang/table.unique.gogo": codeGolangTableUniqueGogo,
	"code/golang/table.write.gogo": codeGolangTableWriteGogo,
	"scripts/mysql/table.sql.gogo": scriptsMysqlTableSqlGogo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"code": &bintree{nil, map[string]*bintree{
		"golang": &bintree{nil, map[string]*bintree{
			"db.gogo": &bintree{codeGolangDbGogo, map[string]*bintree{}},
			"query.gogo": &bintree{codeGolangQueryGogo, map[string]*bintree{}},
			"query.read.gogo": &bintree{codeGolangQueryReadGogo, map[string]*bintree{}},
			"table.gogo": &bintree{codeGolangTableGogo, map[string]*bintree{}},
			"table.index.gogo": &bintree{codeGolangTableIndexGogo, map[string]*bintree{}},
			"table.primary.gogo": &bintree{codeGolangTablePrimaryGogo, map[string]*bintree{}},
			"table.read.gogo": &bintree{codeGolangTableReadGogo, map[string]*bintree{}},
			"table.unique.gogo": &bintree{codeGolangTableUniqueGogo, map[string]*bintree{}},
			"table.write.gogo": &bintree{codeGolangTableWriteGogo, map[string]*bintree{}},
		}},
	}},
	"scripts": &bintree{nil, map[string]*bintree{
		"mysql": &bintree{nil, map[string]*bintree{
			"table.sql.gogo": &bintree{scriptsMysqlTableSqlGogo, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

